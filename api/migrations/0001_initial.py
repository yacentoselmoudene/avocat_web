# Generated by Django 5.1.2 on 2025-09-12 12:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Avocat',
            fields=[
                ('idavocat', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='idAvocat', max_length=50, primary_key=True, serialize=False)),
                ('nomavocat_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomAvocat_fr', max_length=255, null=True)),
                ('nomavocat_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomAvocat_ar', max_length=255, null=True)),
                ('specialisation', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', max_length=255, null=True)),
            ],
            options={
                'db_table': 'avocat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DemandesFichier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_demande', models.CharField(choices=[('COPIE_JUGEMENT', 'Copie de jugement'), ('PIECE_PROCEDURE', 'Pièce de procédure'), ('EXPERTISE', "Rapport d'expertise"), ('AUDIENCE', "Compte-rendu d'audience"), ('COERCITION', 'Demande de coercition'), ('AUTRE', 'Autre')], max_length=50)),
                ('description', models.TextField(help_text='Description détaillée de la demande')),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_limite', models.DateField(blank=True, help_text='Date limite pour la réponse', null=True)),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('APPROUVEE', 'Approuvée'), ('REJETEE', 'Rejetée'), ('EN_COURS', 'En cours de traitement'), ('TERMINEE', 'Terminée')], default='EN_ATTENTE', max_length=20)),
                ('priorite', models.CharField(choices=[('BASSE', 'Basse'), ('NORMALE', 'Normale'), ('HAUTE', 'Haute'), ('URGENTE', 'Urgente')], default='NORMALE', max_length=20)),
                ('commentaires', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Demande de fichier',
                'verbose_name_plural': 'Demandes de fichiers',
                'db_table': 'demande_fichier',
            },
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('idexpert', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='idExpert', max_length=50, primary_key=True, serialize=False)),
                ('nomexpert_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomExpert_fr', max_length=255, null=True)),
                ('nomexpert_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomExpert_ar', max_length=255, null=True)),
                ('specialisationexpert', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='specialisationExpert', max_length=255)),
                ('telephoneexpert', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='telephoneExpert', max_length=20, null=True)),
            ],
            options={
                'db_table': 'expert',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FonctionClient',
            fields=[
                ('idfonction', models.AutoField(primary_key=True, serialize=False)),
                ('libellefonction_fr', models.CharField(blank=True, db_column='libellefonction_fr', max_length=100, null=True, unique=True)),
                ('libellefonction_ar', models.CharField(blank=True, db_column='libellefonction_ar', max_length=100, null=True, unique=True)),
            ],
            options={
                'db_table': 'fonction_client',
            },
        ),
        migrations.CreateModel(
            name='Huissier',
            fields=[
                ('idhuissier', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='idHuissier', max_length=50, primary_key=True, serialize=False)),
                ('nomhuissier_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomHuissier_fr', max_length=255, null=True)),
                ('nomhuissier_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomHuissier_ar', max_length=255, null=True)),
                ('adressehuissier_fr', models.TextField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='adresseHuissier_fr', null=True)),
                ('adressehuissier_ar', models.TextField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='adresseHuissier_ar', null=True)),
                ('telephonehuissier', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='telephoneHuissier', max_length=20, null=True)),
            ],
            options={
                'db_table': 'huissier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Juge',
            fields=[
                ('idjuge', models.AutoField(primary_key=True, serialize=False)),
                ('nomjuge', models.CharField(max_length=255)),
                ('prenomjuge', models.CharField(max_length=255)),
                ('matricule', models.CharField(help_text='Numéro matricule du juge', max_length=50, unique=True)),
                ('specialisation', models.CharField(blank=True, help_text='Spécialisation du juge', max_length=100, null=True)),
                ('actif', models.BooleanField(default=True, help_text='Si le juge est actuellement en fonction')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Juge',
                'verbose_name_plural': 'Juges',
                'db_table': 'juge',
            },
        ),
        migrations.CreateModel(
            name='Opposant',
            fields=[
                ('idopposant', models.AutoField(db_column='idOpposant', primary_key=True, serialize=False)),
                ('nomopposant_fr', models.CharField(blank=True, db_column='nomOpposant_fr', max_length=255, null=True)),
                ('nomopposant_ar', models.CharField(blank=True, db_column='nomOpposant_ar', max_length=255, null=True)),
                ('adresse1_fr', models.CharField(blank=True, db_column='adresse1_fr', max_length=255, null=True)),
                ('adresse1_ar', models.CharField(blank=True, db_column='adresse1_ar', max_length=255, null=True)),
                ('adresse2_fr', models.CharField(blank=True, db_column='adresse2_fr', max_length=255, null=True)),
                ('adresse2_ar', models.CharField(blank=True, db_column='adresse2_ar', max_length=255, null=True)),
                ('numtel1', models.CharField(blank=True, db_column='numTel1', max_length=20, null=True)),
                ('numtel2', models.CharField(blank=True, db_column='numTel2', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=255, null=True)),
            ],
            options={
                'db_table': 'opposant',
            },
        ),
        migrations.CreateModel(
            name='SousTypeAffaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('libelle_fr', models.CharField(blank=True, db_column='libelle_fr', max_length=255, null=True)),
                ('libelle_ar', models.CharField(blank=True, db_column='libelle_ar', max_length=255, null=True)),
            ],
            options={
                'verbose_name': "Sous-type d'affaire",
                'verbose_name_plural': "Sous-types d'affaires",
                'db_table': 'sous_type_affaire',
            },
        ),
        migrations.CreateModel(
            name='Temoin',
            fields=[
                ('idtemoin', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='idTemoin', max_length=50, primary_key=True, serialize=False)),
                ('nomtemoin_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomTemoin_fr', max_length=255, null=True)),
                ('nomtemoin_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomTemoin_ar', max_length=255, null=True)),
                ('adressetemoin_fr', models.TextField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='adresseTemoin_fr', null=True)),
                ('adressetemoin_ar', models.TextField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='adresseTemoin_ar', null=True)),
                ('roletemoin', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='roleTemoin', max_length=100)),
                ('telephonetemoin', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='telephoneTemoin', max_length=20, null=True)),
            ],
            options={
                'db_table': 'temoin',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeAffaire',
            fields=[
                ('idtypeaffaire', models.AutoField(db_column='idTypeAffaire', primary_key=True, serialize=False)),
                ('libelletypeaffaire_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeAffaire_fr', max_length=100, null=True)),
                ('libelletypeaffaire_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeAffaire_ar', max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_affaire',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeAffairePrincipale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('libelle_fr', models.CharField(blank=True, db_column='libelle_fr', max_length=255, null=True)),
                ('libelle_ar', models.CharField(blank=True, db_column='libelle_ar', max_length=255, null=True)),
            ],
            options={
                'verbose_name': "Type d'affaire principale",
                'verbose_name_plural': "Types d'affaires principales",
                'db_table': 'type_affaire_principale',
            },
        ),
        migrations.CreateModel(
            name='TypeAvertissement',
            fields=[
                ('idtypeavertissement', models.AutoField(db_column='idTypeAvertissement', primary_key=True, serialize=False)),
                ('libelle_fr', models.CharField(blank=True, db_column='libelle_fr', help_text='نوع الإنذار', max_length=100, null=True)),
                ('libelle_ar', models.CharField(blank=True, db_column='libelle_ar', help_text='نوع الإنذار بالعربية', max_length=100, null=True)),
                ('delai_legal', models.IntegerField(default=0, help_text='المدة القانونية')),
                ('obligatoire', models.BooleanField(default=True, help_text='إلزامي')),
                ('actif', models.BooleanField(default=True, help_text='نشط')),
                ('description', models.TextField(blank=True, help_text='وصف النوع', null=True)),
                ('categorie', models.CharField(choices=[('CIVIL', 'مدني'), ('COMMERCIAL', 'تجاري'), ('TRAVAIL', 'عمل'), ('FAMILLE', 'أسرة'), ('PENAL', 'جنائي')], default='CIVIL', help_text='فئة الإنذار', max_length=50)),
                ('notification_automatique', models.BooleanField(default=False, help_text='إشعار تلقائي')),
            ],
            options={
                'verbose_name': 'نوع الإنذار',
                'verbose_name_plural': 'أنواع الإنذارات',
                'db_table': 'type_avertissement',
            },
        ),
        migrations.CreateModel(
            name='TypeClient',
            fields=[
                ('idtypeclient', models.AutoField(db_column='idTypeClient', primary_key=True, serialize=False)),
                ('libelletypeclient_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeClient_fr', max_length=100, null=True)),
                ('libelletypeclient_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeClient_ar', max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_client',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeContrat',
            fields=[
                ('idtypecontrat', models.AutoField(db_column='idTypeContrat', primary_key=True, serialize=False)),
                ('libelletypecontrat_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeContrat_fr', max_length=100, null=True)),
                ('libelletypecontrat_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeContrat_ar', max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_contrat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeDemande',
            fields=[
                ('idtypedemande', models.AutoField(db_column='idTypeDemande', primary_key=True, serialize=False)),
                ('libelle_fr', models.CharField(blank=True, db_column='libelle_fr', help_text='نوع الطلب', max_length=100, null=True)),
                ('libelle_ar', models.CharField(blank=True, db_column='libelle_ar', help_text='نوع الطلب بالعربية', max_length=100, null=True)),
                ('categorie', models.CharField(choices=[('CIVIL', 'مدني'), ('COMMERCIAL', 'تجاري'), ('TRAVAIL', 'عمل'), ('FAMILLE', 'أسرة'), ('PENAL', 'جنائي'), ('ADMINISTRATIF', 'إداري')], default='CIVIL', help_text='فئة الطلب', max_length=50)),
                ('delai_legal', models.IntegerField(default=0, help_text='المدة القانونية')),
                ('actif', models.BooleanField(default=True, help_text='نشط')),
                ('description', models.TextField(blank=True, help_text='وصف النوع', null=True)),
                ('documents_requis', models.TextField(blank=True, help_text='المستندات المطلوبة', null=True)),
                ('notification_automatique', models.BooleanField(default=False, help_text='إشعار تلقائي')),
            ],
            options={
                'verbose_name': 'نوع الطلب',
                'verbose_name_plural': 'أنواع الطلبات',
                'db_table': 'type_demande',
            },
        ),
        migrations.CreateModel(
            name='TypeEtape',
            fields=[
                ('idtypeetape', models.AutoField(db_column='idTypeEtape', primary_key=True, serialize=False)),
                ('libelletypeetape', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='libelleTypeEtape', max_length=100)),
            ],
            options={
                'db_table': 'type_etape',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeIntervention',
            fields=[
                ('idtypeintervention', models.AutoField(db_column='idTypeIntervention', primary_key=True, serialize=False)),
                ('libelletypeintervention_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeIntervention_fr', max_length=100, null=True)),
                ('libelletypeintervention_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='libelleTypeIntervention_ar', max_length=100, null=True)),
            ],
            options={
                'db_table': 'type_intervention',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TypeTribunal',
            fields=[
                ('idtypetribunal', models.AutoField(primary_key=True, serialize=False)),
                ('libelletypetribunal_fr', models.CharField(blank=True, db_column='libelletypetribunal_fr', max_length=100, null=True)),
                ('libelletypetribunal_ar', models.CharField(blank=True, db_column='libelletypetribunal_ar', max_length=100, null=True)),
                ('code_type', models.CharField(help_text='Code unique pour identifier le type', max_length=10, unique=True)),
                ('niveau', models.CharField(help_text='Niveau dans la hiérarchie judiciaire', max_length=50)),
                ('description_fr', models.TextField(blank=True, db_column='description_fr', null=True)),
                ('description_ar', models.TextField(blank=True, db_column='description_ar', null=True)),
            ],
            options={
                'verbose_name': 'Type de tribunal',
                'verbose_name_plural': 'Types de tribunaux',
                'db_table': 'type_tribunal',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Affairejudiciaire',
            fields=[
                ('idaffaire', models.AutoField(db_column='idAffaire', primary_key=True, serialize=False)),
                ('dateouverture', models.DateField(db_column='dateOuverture')),
                ('datecloture', models.DateField(blank=True, db_column='dateCloture', null=True)),
                ('numero_dossier', models.CharField(blank=True, max_length=20, null=True)),
                ('code_dossier', models.CharField(blank=True, max_length=10, null=True)),
                ('annee_dossier', models.CharField(blank=True, max_length=4, null=True)),
                ('phase_processus', models.CharField(choices=[('INITIALE', 'Phase Initiale'), ('PROCEDURE', 'Phase Procédure'), ('APPEL', 'Phase Appel'), ('EXECUTION', 'Phase Exécution')], default='INITIALE', max_length=20)),
                ('date_debut_phase', models.DateField(blank=True, help_text='تاريخ بداية المرحلة الحالية', null=True)),
                ('delai_limite', models.DateField(blank=True, help_text='تاريخ انتهاء الصلاحية للقضية', null=True)),
                ('jours_retard', models.IntegerField(default=0, help_text='عدد أيام التأخير')),
                ('observations_execution', models.TextField(blank=True, help_text='ملاحظات حول سير العملية', null=True)),
                ('avocat_demandeur_nom', models.CharField(blank=True, help_text="Nom de l'avocat du demandeur", max_length=255, null=True)),
                ('affaire_parent', models.ForeignKey(blank=True, db_column='idAffaireParent', help_text='القضية الأصلية في حالة الاستئناف', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.affairejudiciaire')),
            ],
            options={
                'db_table': 'affairejudiciaire',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Affairetribunal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datesaisine', models.DateField(db_column='dateSaisine')),
                ('datejugement', models.DateField(blank=True, db_column='dateJugement', null=True)),
                ('idaffaire', models.ForeignKey(db_column='idAffaire', on_delete=django.db.models.deletion.DO_NOTHING, to='api.affairejudiciaire')),
            ],
            options={
                'db_table': 'affairetribunal',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('idaudience', models.CharField(db_column='idAudience', max_length=50, primary_key=True, serialize=False)),
                ('dateaudience', models.DateField(db_column='dateAudience')),
                ('heureaudience', models.TimeField(blank=True, db_column='heureAudience', null=True)),
                ('titre', models.CharField(blank=True, max_length=255, null=True)),
                ('type_rendez_vous', models.CharField(choices=[('AUDIENCE', 'Audience'), ('CONSULTATION', 'Consultation'), ('REUNION', 'Réunion'), ('SIGNATURE', 'Signature'), ('AUTRE', 'Autre')], default='AUTRE', max_length=20)),
                ('statut', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('CONFIRME', 'Confirmé'), ('ANNULE', 'Annulé'), ('TERMINE', 'Terminé'), ('REPORTE', 'Reporté')], default='PLANIFIE', max_length=20)),
                ('lieu', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('remarques', models.TextField(blank=True, db_collation='utf8mb4_unicode_ci', null=True)),
                ('rappel_24h', models.BooleanField(default=True)),
                ('rappel_1h', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_modification', models.DateTimeField(auto_now=True, null=True)),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audiences_crees', to=settings.AUTH_USER_MODEL)),
                ('idaffaire', models.ForeignKey(blank=True, db_column='idAffaire', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.affairejudiciaire')),
            ],
            options={
                'db_table': 'audience',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('idclient', models.AutoField(db_column='idClient', primary_key=True, serialize=False)),
                ('nomclient_fr', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomClient_fr', max_length=255, null=True)),
                ('nomclient_ar', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', db_column='nomClient_ar', max_length=255, null=True)),
                ('adresse1_fr', models.CharField(blank=True, db_column='adresse1_fr', max_length=255, null=True)),
                ('adresse1_ar', models.CharField(blank=True, db_column='adresse1_ar', max_length=255, null=True)),
                ('prenomclient', models.CharField(blank=True, db_column='prenomClient', max_length=255, null=True)),
                ('adresse2_fr', models.CharField(blank=True, db_column='adresse2_fr', max_length=255, null=True)),
                ('adresse2_ar', models.CharField(blank=True, db_column='adresse2_ar', max_length=255, null=True)),
                ('numtel1', models.CharField(blank=True, db_column='numTel1', max_length=20, null=True)),
                ('numtel2', models.CharField(blank=True, db_column='numTel2', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=255, null=True)),
                ('user', models.OneToOneField(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('idtypeclient', models.ForeignKey(blank=True, db_column='idTypeClient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeclient')),
            ],
            options={
                'db_table': 'client',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='affairejudiciaire',
            name='idclient',
            field=models.ForeignKey(blank=True, db_column='idClient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.client'),
        ),
        migrations.CreateModel(
            name='Contrat',
            fields=[
                ('idcontrat', models.AutoField(db_column='idContrat', primary_key=True, serialize=False)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='contrats/')),
                ('idclient', models.ForeignKey(blank=True, db_column='idClient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.client')),
                ('idtypecontrat', models.ForeignKey(blank=True, db_column='idTypeContrat', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typecontrat')),
            ],
            options={
                'db_table': 'contrat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=512, unique=True)),
                ('platform', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Etapejudiciaire',
            fields=[
                ('idetape', models.CharField(db_column='idEtape', max_length=50, primary_key=True, serialize=False)),
                ('datedebut', models.DateField(db_column='dateDebut')),
                ('datefin', models.DateField(blank=True, db_column='dateFin', null=True)),
                ('delai_legal', models.IntegerField(default=0, help_text='المدة القانونية بالأيام')),
                ('date_debut_effective', models.DateField(blank=True, help_text='تاريخ بداية التنفيذ الفعلي', null=True)),
                ('date_fin_effective', models.DateField(blank=True, help_text='تاريخ انتهاء التنفيذ الفعلي', null=True)),
                ('ordre_etape', models.IntegerField(default=0, help_text='ترتيب الخطوة في العملية')),
                ('etape_obligatoire', models.BooleanField(default=True, help_text='خطوة إلزامية')),
                ('description_etape', models.TextField(blank=True, help_text='وصف تفصيلي للخطوة', null=True)),
                ('documents_requis', models.TextField(blank=True, help_text='المستندات المطلوبة', null=True)),
                ('observations_etape', models.TextField(blank=True, help_text='ملاحظات حول الخطوة', null=True)),
                ('idaffaire', models.ForeignKey(blank=True, db_column='idAffaire', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.affairejudiciaire')),
                ('idtypeavertissement', models.ForeignKey(blank=True, db_column='idTypeAvertissement', help_text='نوع الإنذار', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeavertissement')),
                ('idtypedemande', models.ForeignKey(blank=True, db_column='idTypeDemande', help_text='نوع الطلب', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typedemande')),
                ('idtypeetape', models.ForeignKey(blank=True, db_column='idTypeEtape', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeetape')),
            ],
            options={
                'verbose_name': 'خطوة قضائية',
                'verbose_name_plural': 'الخطوات القضائية',
                'db_table': 'etapejudiciaire',
            },
        ),
        migrations.AddField(
            model_name='affairejudiciaire',
            name='etape_actuelle',
            field=models.ForeignKey(blank=True, db_column='idEtapeActuelle', help_text='الخطوة الحالية في العملية', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.etapejudiciaire'),
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('idfacture', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='idFacture', max_length=50, primary_key=True, serialize=False)),
                ('montantfacture', models.FloatField(db_column='montantFacture')),
                ('datefacture', models.DateField(db_column='dateFacture')),
                ('idclient', models.ForeignKey(blank=True, db_column='idClient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.client')),
            ],
            options={
                'db_table': 'facture',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fichier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom_fichier', models.CharField(help_text='Nom original du fichier', max_length=255)),
                ('fichier', models.FileField(help_text='Fichier uploadé', upload_to='fichiers_affaires/%Y/%m/%d/')),
                ('type_fichier', models.CharField(choices=[('JUGEMENT', 'Jugement'), ('PIECE_PROCEDURE', 'Pièce de procédure'), ('EXPERTISE', "Rapport d'expertise"), ('AUDIENCE', "Compte-rendu d'audience"), ('CONTRAT', 'Contrat'), ('FACTURE', 'Facture'), ('CORRESPONDANCE', 'Correspondance'), ('PV_EXECUTION', "PV d'exécution"), ('PV_INFORMATIF', 'PV Informatif'), ('AUTRE', 'Autre')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('version', models.CharField(default='1.0', help_text='Version du fichier', max_length=10)),
                ('public', models.BooleanField(default=False, help_text='Si le fichier est accessible publiquement')),
                ('affaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichiers', to='api.affairejudiciaire')),
                ('demande_fichier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fichiers', to='api.demandesfichier')),
                ('upload_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fichiers_uploades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fichier',
                'verbose_name_plural': 'Fichiers',
                'db_table': 'fichier',
            },
        ),
        migrations.AddField(
            model_name='affairejudiciaire',
            name='idfonctionclient',
            field=models.ForeignKey(blank=True, db_column='idFonctionClient', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.fonctionclient'),
        ),
        migrations.AddField(
            model_name='affairejudiciaire',
            name='huissier_notification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='affaires_notification', to='api.huissier'),
        ),
        migrations.AddField(
            model_name='affairejudiciaire',
            name='opposant_notification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='affaires_notification', to='api.opposant'),
        ),
        migrations.CreateModel(
            name='Paiementhonoraires',
            fields=[
                ('idpaiement', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='idPaiement', max_length=50, primary_key=True, serialize=False)),
                ('pourcentagepaiement', models.FloatField(db_column='pourcentagePaiement')),
                ('montantpaiement', models.FloatField(db_column='montantPaiement')),
                ('datepaiement', models.DateField(db_column='datePaiement')),
                ('idcontrat', models.ForeignKey(blank=True, db_column='idContrat', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.contrat')),
                ('idetape', models.ForeignKey(blank=True, db_column='idEtape', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.etapejudiciaire')),
            ],
            options={
                'db_table': 'paiementhonoraires',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PVExecution',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_pv', models.CharField(choices=[('abstention', 'Abstention'), ('paiement', 'Paiement'), ('pv_informatif', 'PV Informatif')], max_length=20)),
                ('montant_paye', models.DecimalField(blank=True, decimal_places=2, help_text='المبلغ المدفوع', max_digits=10, null=True)),
                ('mode_paiement', models.CharField(blank=True, help_text='طريقة الدفع', max_length=50, null=True)),
                ('numero_recu', models.CharField(blank=True, help_text='رقم الإيصال', max_length=100, null=True)),
                ('motif_absence', models.TextField(blank=True, help_text='سبب عدم العثور على المدين', null=True)),
                ('date_pv', models.DateField(auto_now_add=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('demande_coercition', models.ForeignKey(blank=True, help_text='طلب الإكراه البدني', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.demandesfichier')),
                ('etape', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pv_execution', to='api.etapejudiciaire')),
            ],
            options={
                'verbose_name': "PV d'exécution",
                'verbose_name_plural': "PV d'exécution",
                'db_table': 'pv_execution',
            },
        ),
        migrations.CreateModel(
            name='CategorieAffaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('libelle_fr', models.CharField(blank=True, db_column='libelle_fr', max_length=255, null=True)),
                ('libelle_ar', models.CharField(blank=True, db_column='libelle_ar', max_length=255, null=True)),
                ('sous_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.soustypeaffaire')),
            ],
            options={
                'verbose_name': "Catégorie d'affaire",
                'verbose_name_plural': "Catégories d'affaires",
                'db_table': 'categorie_affaire',
            },
        ),
        migrations.CreateModel(
            name='StatutAffaire',
            fields=[
                ('idstatutaffaire', models.AutoField(db_column='idStatutAffaire', primary_key=True, serialize=False)),
                ('libellestatutaffaire', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='libelleStatutAffaire', max_length=100)),
                ('datedebut', models.DateField(db_column='dateDebut')),
                ('datefin', models.DateField(blank=True, db_column='dateFin', null=True)),
                ('idaffaire', models.ForeignKey(db_column='idAffaire', on_delete=django.db.models.deletion.DO_NOTHING, to='api.affairejudiciaire')),
            ],
            options={
                'db_table': 'statut_affaire',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StatutAffairetribunal',
            fields=[
                ('idstatutaffairetribunal', models.AutoField(db_column='idStatutAffaireTribunal', primary_key=True, serialize=False)),
                ('libellestatutaffairetribunal', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='libelleStatutAffaireTribunal', max_length=100)),
                ('datedebut', models.DateField(db_column='dateDebut')),
                ('datefin', models.DateField(blank=True, db_column='dateFin', null=True)),
                ('affairetribunal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuts_affairetribunal', to='api.affairetribunal')),
            ],
            options={
                'db_table': 'statut_affairetribunal',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StatutAudience',
            fields=[
                ('idstatutaudience', models.AutoField(db_column='idStatutAudience', primary_key=True, serialize=False)),
                ('libellestatutaudience', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='libelleStatutAudience', max_length=100)),
                ('datedebut', models.DateField(db_column='dateDebut')),
                ('datefin', models.DateField(blank=True, db_column='dateFin', null=True)),
                ('idaudience', models.ForeignKey(db_column='idAudience', on_delete=django.db.models.deletion.CASCADE, to='api.audience')),
            ],
            options={
                'db_table': 'statut_audience',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StatutEtape',
            fields=[
                ('idstatutetape', models.AutoField(db_column='idStatutEtape', primary_key=True, serialize=False)),
                ('libellestatutetape', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='libelleStatutEtape', max_length=100)),
                ('datedebut', models.DateField(db_column='dateDebut')),
                ('datefin', models.DateField(blank=True, db_column='dateFin', null=True)),
                ('idetape', models.ForeignKey(db_column='idEtape', on_delete=django.db.models.deletion.CASCADE, to='api.etapejudiciaire')),
            ],
            options={
                'db_table': 'statut_etape',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StatutFacture',
            fields=[
                ('idstatutfacture', models.AutoField(db_column='idStatutFacture', primary_key=True, serialize=False)),
                ('libellestatutfacture', models.CharField(db_collation='utf8mb4_unicode_ci', db_column='libelleStatutFacture', max_length=100)),
                ('datedebut', models.DateField(db_column='dateDebut')),
                ('datefin', models.DateField(blank=True, db_column='dateFin', null=True)),
                ('idfacture', models.ForeignKey(db_column='idFacture', on_delete=django.db.models.deletion.DO_NOTHING, to='api.facture')),
            ],
            options={
                'db_table': 'statut_facture',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tribunal',
            fields=[
                ('idtribunal', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('nomtribunal_fr', models.CharField(blank=True, db_column='nomtribunal_fr', max_length=255, null=True)),
                ('nomtribunal_ar', models.CharField(blank=True, db_column='nomtribunal_ar', max_length=255, null=True)),
                ('adressetribunal_fr', models.TextField(blank=True, db_column='adressetribunal_fr', null=True)),
                ('adressetribunal_ar', models.TextField(blank=True, db_column='adressetribunal_ar', null=True)),
                ('villetribunal_fr', models.CharField(blank=True, db_column='villetribunal_fr', max_length=100, null=True)),
                ('villetribunal_ar', models.CharField(blank=True, db_column='villetribunal_ar', max_length=100, null=True)),
                ('telephonetribunal', models.CharField(blank=True, max_length=20, null=True)),
                ('categories_affaires', models.ManyToManyField(blank=True, related_name='tribunaux', to='api.categorieaffaire')),
                ('parent', models.ForeignKey(blank=True, db_column='idTribunalParent', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.tribunal')),
                ('sous_types_affaires', models.ManyToManyField(blank=True, related_name='tribunaux', to='api.soustypeaffaire')),
                ('types_affaires', models.ManyToManyField(blank=True, related_name='tribunaux', to='api.typeaffaireprincipale')),
                ('idtypetribunal', models.ForeignKey(blank=True, db_column='idTypeTribunal', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typetribunal')),
            ],
            options={
                'verbose_name': 'Tribunal',
                'verbose_name_plural': 'Tribunaux',
                'db_table': 'tribunal',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='audience',
            name='idtribunal',
            field=models.ForeignKey(blank=True, db_column='idTribunal', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.tribunal'),
        ),
        migrations.AddField(
            model_name='affairetribunal',
            name='idtribunal',
            field=models.ForeignKey(db_column='idTribunal', on_delete=django.db.models.deletion.DO_NOTHING, to='api.tribunal'),
        ),
        migrations.AddField(
            model_name='affairejudiciaire',
            name='idtypeaffaire',
            field=models.ForeignKey(blank=True, db_column='idTypeAffaire', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeaffaire'),
        ),
        migrations.AddField(
            model_name='soustypeaffaire',
            name='type_principale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.typeaffaireprincipale'),
        ),
        migrations.CreateModel(
            name='AffaireJuge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role_juge', models.CharField(help_text='Rôle du juge (rapporteur, président, etc.)', max_length=100)),
                ('date_debut', models.DateField(auto_now_add=True, help_text="Date de début d'intervention")),
                ('date_fin', models.DateField(blank=True, help_text="Date de fin d'intervention", null=True)),
                ('actif', models.BooleanField(default=True, help_text='Si le juge intervient actuellement')),
                ('affaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='juges_affaire', to='api.affairejudiciaire')),
                ('juge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affaires_juge', to='api.juge')),
            ],
            options={
                'verbose_name': 'Relation Affaire-Juge',
                'verbose_name_plural': 'Relations Affaire-Juge',
                'db_table': 'affaire_juge',
                'unique_together': {('affaire', 'juge', 'role_juge')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('AUDIENCE', 'Audience'), ('DOCUMENT', 'Document'), ('FACTURE', 'Facture'), ('ETAPE', 'Etape'), ('RDV', 'Rendez-vous')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('payload', models.JSONField(blank=True, default=dict)),
                ('deep_link', models.JSONField(blank=True, default=dict)),
                ('level', models.CharField(choices=[('info', 'info'), ('warning', 'warning'), ('critical', 'critical')], default='info', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('actor_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications_generated', to=settings.AUTH_USER_MODEL)),
                ('affaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.affairejudiciaire')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'read_at', '-created_at'], name='api_notific_user_id_034f6f_idx')],
            },
        ),
        migrations.CreateModel(
            name='AffaireOpposantAvocat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_debut', models.DateField(auto_now_add=True, help_text='Date de début de la défense')),
                ('date_fin', models.DateField(blank=True, help_text='Date de fin de la défense (si applicable)', null=True)),
                ('role_avocat', models.CharField(blank=True, help_text="Rôle de l'avocat (ex: défenseur, conseil)", max_length=100, null=True)),
                ('actif', models.BooleanField(default=True, help_text="Si l'avocat défend actuellement cet opposant")),
                ('affaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opposants_avocats', to='api.affairejudiciaire')),
                ('avocat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affaires_opposants', to='api.avocat')),
                ('opposant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affaires_avocats', to='api.opposant')),
            ],
            options={
                'verbose_name': 'Relation Affaire-Opposant-Avocat',
                'verbose_name_plural': 'Relations Affaire-Opposant-Avocat',
                'db_table': 'affaire_opposant_avocat',
                'unique_together': {('affaire', 'opposant', 'avocat')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='affairetribunal',
            unique_together={('idaffaire', 'idtribunal')},
        ),
        migrations.AlterUniqueTogether(
            name='affairejudiciaire',
            unique_together={('numero_dossier', 'code_dossier', 'annee_dossier')},
        ),
        migrations.CreateModel(
            name='Participationtemoinetape',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dateintervention', models.DateField(db_column='dateIntervention')),
                ('idetape', models.ForeignKey(db_column='idEtape', on_delete=django.db.models.deletion.CASCADE, to='api.etapejudiciaire')),
                ('idtemoin', models.ForeignKey(db_column='idTemoin', on_delete=django.db.models.deletion.DO_NOTHING, to='api.temoin')),
                ('idtypeintervention', models.ForeignKey(blank=True, db_column='idTypeIntervention', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeintervention')),
            ],
            options={
                'db_table': 'participationtemoinetape',
                'managed': True,
                'unique_together': {('idetape', 'idtemoin')},
            },
        ),
        migrations.CreateModel(
            name='Participationhuissieretape',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dateintervention', models.DateField(db_column='dateIntervention')),
                ('idetape', models.ForeignKey(db_column='idEtape', on_delete=django.db.models.deletion.CASCADE, to='api.etapejudiciaire')),
                ('idhuissier', models.ForeignKey(db_column='idHuissier', on_delete=django.db.models.deletion.DO_NOTHING, to='api.huissier')),
                ('idtypeintervention', models.ForeignKey(blank=True, db_column='idTypeIntervention', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeintervention')),
            ],
            options={
                'db_table': 'participationhuissieretape',
                'managed': True,
                'unique_together': {('idetape', 'idhuissier')},
            },
        ),
        migrations.CreateModel(
            name='Participationexpertetape',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dateintervention', models.DateField(db_column='dateIntervention')),
                ('idetape', models.ForeignKey(db_column='idEtape', on_delete=django.db.models.deletion.CASCADE, to='api.etapejudiciaire')),
                ('idexpert', models.ForeignKey(db_column='idExpert', on_delete=django.db.models.deletion.DO_NOTHING, to='api.expert')),
                ('idtypeintervention', models.ForeignKey(blank=True, db_column='idTypeIntervention', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.typeintervention')),
            ],
            options={
                'db_table': 'participationexpertetape',
                'managed': True,
                'unique_together': {('idetape', 'idexpert')},
            },
        ),
    ]
